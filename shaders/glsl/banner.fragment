// __multiversion__
// This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.

#include "fragmentVersionCentroid.h"
#include "uniformShaderConstants.h"
#include "uniformPerFrameConstants.h"

// Including files...
#include "gl_assets/functionLib.glsl"
#include "gl_assets/globalPrecision.glsl"

LAYOUT_BINDING(0) uniform sampler2D TEXTURE_0;

#if __VERSION__ >= 300
_centroid varying vec4 uv;
#else
varying vec4 uv;
#endif

#ifdef ENABLE_FOG
varying vec4 fogColor;
#endif

#ifdef ENABLE_LIGHT
varying vec4 light;
#endif

#ifndef DISABLE_TINTING
varying vec4 color;
#endif

void main()
{
	vec4 diffuse = texture2D(TEXTURE_0, uv.xy);
	vec4 base = texture2D(TEXTURE_0, uv.zw);

#ifndef DISABLE_TINTING
	base.a = mix(diffuse.r * diffuse.a, diffuse.a, color.a);
	base.rgb *= color.rgb;
#endif

// Main variables....
dayA = pow(clamp2(1. - FOG_COLOR.b * 1.2), .5);
nightA = pow(clamp2(1. - FOG_COLOR.r * 1.5), 1.2);
rainA = clamp2(pow((.7 - FOG_CONTROL.x) / (FOG_CONTROL.y - FOG_CONTROL.x), 3.));

vec3 shadowAmbient = shadowCol * shadow_B * base.rgb;

#ifdef ENABLE_LIGHT
	float uv1x = maxC(light);
	float uv2x = clamp2(pow(uv1x, lightShrp) * lightSize);
	float shadow_v = shdAlpha * 1.2 * (1. - uv2x) * mix(1., .64, max(nightA, rainA));
	base.rgb *= sqrt(light.rgb);
	base.rgb = base.rgb * (1. - shadow_v) + shadowAmbient * shadow_v;
#else
	float uv1x, uv2x = 1.;
#endif

#if defined UNDERWATER && defined UNDERWATER_CAUSTIC
	base.rgb *= FOG_COLOR.rgb * (1. - uv2x) + uv2x;
#endif

base.rgb = toneA(base.rgb);
vec3 grey_s = A_Saturation(base.rgb, monoSatE * (1. - uv2x) + uv2x);

#ifndef UNDERWATER // The monochromatic effect will render differently for terrain, if the player is not underwater
	base.rgb = FOG_CONTROL.x < 1. && FOG_CONTROL.x > 0. ? base.rgb * (1. - rainA) + grey_s * mix(mono_B, 1., uv2x) * rainA : base.rgb;
#endif

#ifdef HDR
	base = rgb2hdr(base);
#endif

#ifdef ENABLE_FOG
	//apply fog
	base.rgb = mix( base.rgb, fogColor.rgb, fogColor.a );
#endif

#ifdef UI_ENTITY
	base.a *= HUD_OPACITY;
#endif
	gl_FragColor = base;
}